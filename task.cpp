#include <iostream>  // Подключаем библиотеку для ввода/вывода
#include <vector>    // Подключаем библиотеку для работы с векторами (динамическими массивами)

using namespace std; // Используем стандартное пространство имен для упрощения кода

// Функция сортировки выбором
void selectionSort(vector<int>& arr) {  // Принимаем вектор по ссылке для изменения исходного массива
    int n = arr.size();                 // Получаем размер массива
    for (int i = 0; i < n - 1; i++) {  // Внешний цикл: проходим по всем элементам массива
        int minIndex = i;               // Предполагаем, что текущий элемент - минимальный
        for (int j = i + 1; j < n; j++) {  // Внутренний цикл: ищем минимальный элемент в оставшейся части
            if (arr[j] < arr[minIndex]) {   // Если нашли элемент меньше текущего минимального
                minIndex = j;               // Обновляем индекс минимального элемента
            }
        }
        swap(arr[i], arr[minIndex]);    // Меняем местами текущий элемент и найденный минимальный
    }
}

// Функция для вывода массива на экран
void printArray(const vector<int>& arr) {  // Принимаем вектор по константной ссылке (не изменяем)
    for (int num : arr) {               // Цикл for-each: проходим по всем элементам массива
        cout << num << " ";             // Выводим текущий элемент и пробел
    }
    cout << endl;                       // Переход на новую строку после вывода всего массива
}

// Главная функция программы
int main() {
    vector<int> testArray = {64, 25, 12, 22, 11};  // Создаем тестовый массив
    cout << "Исходный массив: ";        // Выводим сообщение
    printArray(testArray);              // Вызываем функцию для вывода массива
    
    selectionSort(testArray);           // Вызываем функцию сортировки
    
    cout << "Отсортированный массив: "; // Выводим сообщение
    printArray(testArray);              // Выводим отсортированный массив
    
    return 0;                           // Завершаем программу с кодом 0 (успех)
}
